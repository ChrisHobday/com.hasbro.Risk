app-id: com.hasbro.Risk
sdk: org.freedesktop.Sdk
runtime: org.freedesktop.Platform
runtime-version: &runtime-version '23.08'
base: org.winehq.Wine
base-version: stable-23.08
command: GameScopeWrapper
rename-desktop-file: Risk.desktop
rename-icon: Risk
finish-args:
  - --device=all
  - --filesystem=host:ro
  - --filesystem=xdg-run/app/com.discordapp.Discord:create # Required for setting up Discord rich presence
  - --filesystem=xdg-run/gamescope-0:ro # Required for Gamescope on Steam Deck
  - --socket=pulseaudio
  - --socket=wayland
  - --share=network
  - --share=ipc
  - --allow=multiarch
  - --env=PATH=/app/bin:/usr/bin:/usr/lib/extensions/vulkan/gamescope/bin # Add Vulkan GameScope extension to path to get access to gamescope binary
  - --env=WINEPREFIX=/var/data/WinePrefix
inherit-extensions:
  - org.freedesktop.Platform.Compat.i386
  - org.freedesktop.Platform.GL32
  - org.freedesktop.Platform.ffmpeg-full
  - org.freedesktop.Platform.ffmpeg_full.i386
  - org.winehq.Wine.gecko
  - org.winehq.Wine.mono
  - org.winehq.Wine.DLLs
modules:
  # Icoutils, needed for extracting .ico from Risk Classic Collection.exe
  - name: Icoutils
    buildsystem: simple
    sources:
      - type: archive
        url: http://savannah.nongnu.org/download/icoutils/icoutils-0.32.3.tar.bz2
        sha256: 17abe02d043a253b68b47e3af69c9fc755b895db68fdc8811786125df564c6e0
    build-commands:
      - |
        echo "Configuring and make Icoutls"
        ./configure --prefix=${FLATPAK_DEST}
        make

        echo "Installing Icoutils"
        make install
  # ImageMagick, needed for converting .ico extracted from exe to .png
  - name: ImageMagick
    buildsystem: simple
    sources:
      - type: git
        url: https://github.com/ImageMagick/ImageMagick.git
        tag: 7.1.1-36
    build-commands:
      - |
        echo "Configuring and make ImageMagick"
        ./configure --prefix=${FLATPAK_DEST}
        make

        echo "Installing ImageMagick"
        make install
  # Risk installer files, icon and desktop file creation shell scripts, and wrapper script for launching
  - name: Risk
    buildsystem: simple
    sources:
      # Metadata file for Flatpak repos
      - type: file
        path: com.hasbro.Risk.metainfo.xml
      # Desktop file for Risk
      - type: file
        path: Risk.desktop
      # Risk CD/ISO
      - type: archive
        archive-type: 7z
        strip-components: 0
        url: https://archive.org/download/risk96/RISK.iso
        sha256: 1f11da4878707a2ebb4d5e3c6ea9cbb14a14875f245300dc5b3ca21026d11387
        dest: RiskCD
      # https://d2.myabandonware.com/t/e4baadf8-45ca-45de-ab7c-2fb19cf425fc/Risk-The-Game-of-Global-Domination_Win_EN_ISO-Version.zip
      # RISK.EXE 1.1 patch
      - type: archive
        url: https://d2.myabandonware.com/t/cff71cd4-570b-4179-85f1-32b9879f69c3/Risk-The-Game-of-Global-Domination_Patch_Win_EN_Patch-11.zip
        sha256: 2e95abf393f93cc90d8ca6b6898cb4290ef82bccb872049725619d4f1b39b33e
      # Windows registry file that sets Risk paths
      - type: file
        path: Risk.reg
      # Windows registry file that sets Wine to grab cursor in fullscreen, emulate a virtual desktop and set desktop resolution
      - type: file
        path: WineGraphics.reg
      # Shell script that extracts Risk icon from the Risk Classic Collection.exe, converts it to different sized png files and move those to the correct icon locations
      - type: shell
        commands:
          - |
            echo "Converting RiskCD/risk.ico to Risk.png"
            convert RiskCD/risk.ico Risk.png

            echo "Creating directory /app/share/icons/hicolor/32x32/apps"
            mkdir -p /app/share/icons/hicolor/32x32/apps

            echo "Moving Risk.png to /app/share/icons/hicolor/32x32/apps/Risk.png"
            mv Risk.png /app/share/icons/hicolor/32x32/apps/Risk.png
      # Script that sets up Wine and installs Risk if it's not already
      - type: script
        commands:
          - |
            echo "Checking if Risk is already installed"
            if [ -d /var/data/WinePrefix/drive_c/Games/Risk ]; then
              echo "Risk is installed"
            else
              echo "Risk is not installed"
              echo "Installing Risk"
              echo "Initializing Wine prefix"
              wineboot -i

              echo "Making /var/data/WinePrefix/drive_c/Games"
              mkdir /var/data/WinePrefix/drive_c/Games

              echo "Copying /app/share/RiskCD to /var/data/WinePrefix/drive_c/Games/RiskCD (to satisfy risk CDPATH)"
              cp -r /app/share/RiskCD /var/data/WinePrefix/drive_c/Games/RiskCD

              echo "Copying /app/share/RiskCD to /var/data/WinePrefix/drive_c/Games/Risk (to act as Risk installation dir)"
              cp -r /app/share/RiskCD /var/data/WinePrefix/drive_c/Games/Risk

              echo "Updating Windows registry with Risk paths"
              wine regedit /app/share/Risk.reg

              echo "Updating Windows registry with Wine graphics keys"
              wine regedit /app/share/WineGraphics.reg

              echo "Waiting for registry updates to be applied"
              sleep 3
            fi
        dest-filename: RiskInstaller
      # Script that changes to installation directory of Risk and launches it with Wine
      - type: script
        commands:
          - |
            echo "Changing directory to /var/data/WinePrefix/drive_c/Games/Risk"
            cd /var/data/WinePrefix/drive_c/Games/Risk

            echo "Launching Risk with Wine"
            wine /var/data/WinePrefix/drive_c/Games/Risk/risk.exe
        dest-filename: RiskLauncher
        # Script that is ran when Flatpak launches, which starts GameScope in fullscreen with the SDL backend and then runs the RiskWrapper
      - type: script
        commands:
          - |
            echo "Running Risk installer"
            RiskInstaller

            echo "Running GameScope in fullscreen with NIS upscaling filter and launching the RiskLauncher within"
            gamescope -f --filter nis --backend sdl --expose-wayland -- RiskLauncher
        dest-filename: GameScopeWrapper
    build-commands:
      - |
        echo "Installing com.hasbro.Risk.metainfo.xml in /app/share/metainfo/"
        install -Dm644 -t /app/share/metainfo/ com.hasbro.Risk.metainfo.xml

        echo "Moving Risk.desktop to /app/share/applications"
        mv Risk.desktop /app/share/applications

        echo "Moving RiskCD to /app/share/RiskCD"
        mv RiskCD /app/share/RiskCD

        echo "Moving/Overwriting 1.1 patched RISK.EXE to /app/share/RiskCD/risk.exe "
        mv RISK.EXE /app/share/RiskCD/risk.exe

        echo "Moving Risk.reg to /app/share"
        mv Risk.reg /app/share

        echo "Moving WineGraphics.reg to /app/share"
        mv WineGraphics.reg /app/share

        echo "Moving RiskInstaller to /app/bin"
        mv RiskInstaller /app/bin

        echo "Moving RiskLauncher to /app/bin"
        mv RiskLauncher /app/bin

        echo "Moving GameScopeWrapper to /app/bin"
        mv GameScopeWrapper /app/bin